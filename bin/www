#!/usr/bin/env node

const app = require(`${process.cwd()}/src/server`);
const WebSocket = require(`${process.cwd()}/src/web-socket`);
const server = require('http').createServer(app);

// Hook WebSocket
WebSocket.setup(server);

const port = process.env.PORT || 8000;

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  const bind = typeof port === 'string'
    ? `Pipe ${port}`
    : `Port ${port}`;

  switch (error.code) {
    case 'EACCES':
      console.error(`${bind} requires elevated privileges`); // eslint-disable-line no-console
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(`${bind} is already in use`); // eslint-disable-line no-console
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  const addr = server.address();
  const bind = typeof addr === 'string'
    ? `pipe ${addr}`
    : `port ${addr.port}`;
  console.info(`Listening on ${bind}`); // eslint-disable-line no-console
}

// Start server
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);
